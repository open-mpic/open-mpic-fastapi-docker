data "aws_availability_zones" "available-{{region}}" {
  state = "available"
  provider = aws.{{region}}
}



resource "aws_security_group" "open-mpic-standard-{{region}}" {
    provider = aws.{{region}}
    name = "open-mpic-{{deployment-id}}-{{region}}"
 }



resource "aws_vpc_security_group_ingress_rule" "allow_tls_ipv4-{{region}}" {
  provider = aws.{{region}}
  security_group_id = aws_security_group.open-mpic-standard-{{region}}.id
  cidr_ipv4         = "0.0.0.0/0"
  from_port         = 443
  ip_protocol       = "tcp"
  to_port           = 443
}


resource "aws_vpc_security_group_ingress_rule" "allow_ssh_ipv4-{{region}}" {
  provider = aws.{{region}}
  security_group_id = aws_security_group.open-mpic-standard-{{region}}.id
  cidr_ipv4         = "0.0.0.0/0"
  from_port         = 22
  ip_protocol       = "tcp"
  to_port           = 22
}

resource "aws_vpc_security_group_ingress_rule" "allow_http_ipv4-{{region}}" {
  provider = aws.{{region}}
  security_group_id = aws_security_group.open-mpic-standard-{{region}}.id
  cidr_ipv4         = "0.0.0.0/0"
  from_port         = 80
  ip_protocol       = "tcp"
  to_port           = 80
}

resource "aws_vpc_security_group_egress_rule" "allow_all_traffic_ipv4-{{region}}" {
  provider = aws.{{region}}
  security_group_id = aws_security_group.open-mpic-standard-{{region}}.id
  cidr_ipv4         = "0.0.0.0/0"
  ip_protocol       = "-1" # semantically equivalent to all ports
}